app.franz {

  consumer {
    topic: "", topic: ${?TOPIC}

    bootstrap.servers : "", bootstrap.servers :${?BROKERS}

    # used for auto-generating namespaces from json
    namespace: "<random>"

    groupId: "expression-application", groupId: ${?GROUPID}
    offset: earliest, offset: ${?OFFSET}

    # should we back-pressure/wait on committing offsets back to kafka
    # when true, we wait for the commit ack in the processing pipeline. When
    # false we do the kafka offset commit asynchronously, which can add ~10% performance
    # at the expense of consuming additional messages when an ack may potentially have failed
    blockOnCommits: true

    # this setting is used when we're invoking our persist call one message at a time (e.g. non-batching)
    # If set to a non-positive number (e.g. 0), then it will default to using the number of available processors
    #
    # given the 'persist' call is typically an IO operation, it would be ok to set it to a larger number
    # as IO operations shouldn't be bounded by compute threads
    concurrency: 0

    # the url of the schema registry REST service
    schema.registry.url: "http://localhost:8081"
    auto.register.schemas: true

    key.subject.name.strategy: "io.confluent.kafka.serializers.subject.TopicNameStrategy"
    value.subject.name.strategy: "io.confluent.kafka.serializers.subject.TopicNameStrategy"

    # used by the schema registry
    identityMapCapacity: 100

    key.deserializer: "org.apache.kafka.common.serialization.StringDeserializer"
    key.serializer: "org.apache.kafka.common.serialization.StringSerializer"

    value.deserializer: "io.confluent.kafka.serializers.KafkaAvroDeserializer"
    value.serializer: "io.confluent.kafka.serializers.KafkaAvroSerializer"
  }

  producer : ${app.franz.consumer}

  # if either the max count or time are zero, then each record will be persisted one at a time
  batchWindow {
    # the maximum size a batch is allowed to be
    maxCount: 1000
    # the maximum time we should spend batching records before we flush the batch
    maxTime: 10s
  }

}